name: Build and Deploy Project

# on: [push]
on:
  push:
    branches: 
      - "master" 

jobs:
  build:
    environment:
      name: testing
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: Install python version 3.9 
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: install all dependencies
        run: pip install -r requirements.txt

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v1
      #   with: 
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Build and push Docker images
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     push: true
      #     tag: ${{ secrets.DOCKER_HUB_USERNAME }}/testing:latest



      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.output.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      # - name: Image digest
        # run: echo ${{ steps.docker_build.output.name }}


  deploy:
    environment:
      name: testing
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3

      - name: Deploying stuff
        run: echo "going to delpoying"

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: 212.111.88.252
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
            docker kill 2_${{ github.event.repository.name }} || true
            docker rm -f 2_${{ github.event.repository.name }} || true
            docker run -d --name 2_${{ github.event.repository.name }} -p 8056:5001 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest

      # - name: Connect to VPS via SSH
      #   uses: actions/ssh-keygen@v2
      #   with:
      #     ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     ssh-key-file: ~/.ssh/id_rsa

      # - name: Deploy to VPS
      #   run: |
      #     ssh -o StrictHostKeyChecking=no root@212.111.88.252 'docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/$crypto-exchange-service:latest'
      #     ssh -o StrictHostKeyChecking=no root@212.111.88.252 'docker run -d --name crypto-exchange-service crypto-exchange-service/${{ github.event.repository.name }}:latest'

      # - name: Start Minikube
      #   run: minikube start

      # - name: Deploy to Minikube
      #   run: |
      #     kubectl create deployment my-python-app --image=${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
      #     kubectl expose deployment my-python-app --type=LoadBalancer --port=8080
      
      # - name: SSH into Minikube
      #   uses: appleboy/ssh-action@v0.1.2
      #   with:
      #     host: ${{ secrets.MINIKUBE_HOST }}
      #     username: ${{ secrets.MINIKUBE_USER }}
      #     key: ${{ secrets.MINIKUBE_SSH_PRIVATE_KEY }}

      # - name: Pull the latest Docker image from Docker Hub into Minikube
      #   run: |
      #     minikube ssh -- docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
      #     minikube ssh -- docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest ${{ github.event.repository.name }}:latest

      # - name: Deploy to Minikube using kubectl
      #   run: |
      #     kubectl apply -f kube-config.yaml
      #     kubectl apply -f service.yaml


      # - name: Start Minikube
      #   id: minikube
      #   uses: hiberbee/github-action-minikube@latest
      #   with:
      #     profile: github

      # - name: Get Minikube status
      #   run: minikube status

      # - name: Get cluster info
      #   run: kubectl cluster-info

      # - name: Get Kubernetes pods
      #   run: kubectl get services --all-namespaces

      # - name: Get Minikube IP
      #   run: echo ${{ steps.minikube.outputs.ip }}

      # - name: Get Docker containers
      #   run: docker ps

      # - name: Get Helm releases
      #   uses: hiberbee/github-action-helm@latest
      #   with:
      #     helm-command: list